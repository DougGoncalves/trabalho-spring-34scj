DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS AUTHORITIES;
DROP TABLE IF EXISTS PAYMENT;
DROP TABLE IF EXISTS STUDENT_CREDIT_CARD;
DROP SEQUENCE IF EXISTS payment_sequence;
DROP SEQUENCE IF EXISTS student_credit_card_sequence;

CREATE TABLE USERS (
	USERNAME VARCHAR_IGNORECASE(50) NOT NULL PRIMARY KEY,
	PASSWORD VARCHAR_IGNORECASE(200) NOT NULL,
	ENABLED BOOLEAN NOT NULL
);

CREATE TABLE AUTHORITIES (
	USERNAME VARCHAR_IGNORECASE(50) NOT NULL,
	AUTHORITY VARCHAR_IGNORECASE(50) NOT NULL,
	CONSTRAINT FK_AUTHORITIES_USERS FOREIGN KEY(USERNAME) REFERENCES USERS(USERNAME)
);

create table PAYMENT (
    PAYMENT_ID INTEGER not null,
    ORDER_ID INTEGER,
    STATUS INTEGER,
    STUDENT_ID VARCHAR(8),
    TOTAL_ORDER_AMOUNT DECIMAL(19,2),
    CREATION_DATE TIMESTAMP not null,
    UPDATE_DATE TIMESTAMP,
    primary key (PAYMENT_ID)
);

create table STUDENT_CREDIT_CARD (
    ID INTEGER not null,
    CARD_NUMBER VARCHAR(16),
    COURSE VARCHAR(6),
    EXPIRATION_DATE VARCHAR(5),
    NAME VARCHAR(200),
    REGISTRATION_CODE VARCHAR(8),
    VERIFICATION_CODE INTEGER,
    primary key (id)
);

CREATE SEQUENCE payment_sequence START WITH 11 INCREMENT BY 1;
CREATE SEQUENCE student_credit_card_sequence INCREMENT BY 1;